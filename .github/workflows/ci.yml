#
<<<<<<< HEAD
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
=======
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
>>>>>>> upstream/master
#

name: "Continuous Integration"

on:
  push:
<<<<<<< HEAD
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
=======
    branches:
      - '**'
      - '!dependabot/**'
  pull_request:
    branches: [ '**' ]
>>>>>>> upstream/master

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macOS-latest ]
        java: [ 8, 11 ]
<<<<<<< HEAD
        language: ['java', 'go']
=======
        language: [ 'java' ]
>>>>>>> upstream/master
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
<<<<<<< HEAD
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main
          languages: ${{ matrix.language }}

      - if: matrix.language == 'cpp' || matrix.language == 'csharp'
        name: Build C
        run: |
          git submodule init
          git submodule update
          make -C ./eventmesh-sdks/eventmesh-sdk-c  

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v3
=======
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build C SDK
        if: matrix.language == 'cpp'
        run: make -C ./eventmesh-sdks/eventmesh-sdk-c

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
>>>>>>> upstream/master
        with:
          distribution: 'zulu'
          java-version: 11

      - name: GenerateGrammarSource
<<<<<<< HEAD
        run: ./gradlew clean generateGrammarSource --parallel --daemon

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
=======
        run: ./gradlew clean generateGrammarSource --parallel --daemon --scan
        env:
          DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
>>>>>>> upstream/master
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}

      # https://docs.gradle.org/current/userguide/performance.html
      - name: Build
<<<<<<< HEAD
        run: ./gradlew clean build jar dist jacocoTestReport -x spotlessJava -x generateGrammarSource --parallel --daemon

      - name: Install plugin
        run: ./gradlew installPlugin

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v2

      - name: Upload coverage report to codecov.io
        run: bash <(curl -s https://codecov.io/bash) || echo 'Failed to upload coverage report!'

  license-check:
    name: License Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check license header
        uses: apache/skywalking-eyes@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check third party dependencies
        run: |
          ./gradlew clean jar dist -x spotlessJava -x test -x checkstyleMain -x javaDoc && ./gradlew installPlugin && ./gradlew tar && sh tools/dependency-check/check-dependencies.sh && echo "Thirty party dependencies check success"
=======
        run: >
          ./gradlew clean build dist jacocoTestReport --parallel --daemon --scan
          -x spotlessJava -x generateGrammarSource -x generateDistLicense -x checkDeniedLicense
        env:
          DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

      - name: Install plugin
        run: ./gradlew installPlugin --scan
        env:
          DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

      - name: Upload coverage report to codecov.io
        run: bash <(curl -s https://codecov.io/bash) || echo 'Failed to upload coverage report!'
>>>>>>> upstream/master
